<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.s.api.admin.dao.IXxlApiDocumentDao">
	
	<resultMap id="XxlApiDocument" type="org.s.api.admin.core.model.XxlApiDocument" >
		<result column="id" property="id" />
		<result column="project_id" property="projectId" />
		<result column="group_id" property="groupId" />
	    <result column="name" property="name" />
		<result column="status" property="status" />
		<result column="star_level" property="starLevel" />
		<result column="request_url" property="requestUrl" />
		<result column="request_method" property="requestMethod" />
		<result column="request_headers" property="requestHeaders" />
		<result column="request_example" property="requestExample" />
		<result column="query_params" property="queryParams" />
		<result column="response_params" property="responseParams" />
		<result column="response_datatype_id" property="responseDatatypeId" />
		<result column="success_resp_type" property="successRespType" />
		<result column="success_resp_example" property="successRespExample" />
		<result column="fail_resp_type" property="failRespType" />
		<result column="fail_resp_example" property="failRespExample" />
		<result column="remark" property="remark" />
		<result column="add_time" property="addTime" />
		<result column="update_time" property="updateTime" />
		<result column="need_resources" property="needResources" />
		<result column="wiki_id" property="wikiId" />
		<result column="response_remark" property="respRemark" />
		<result column="request_remark" property="reqRemark" />
		<result column="creat_user" property="creatUser" />
		<result column="update_user" property="updateUser" />
		
	</resultMap>

	<sql id="Base_Column_List">
		t.id,
		t.project_id,
		t.group_id,
		t.name,
		t.status,
		t.star_level,
		t.request_url,
		t.request_method,
		t.request_headers,
		t.request_example,
		t.query_params,
		t.response_params,
		t.response_datatype_id,
		t.success_resp_type,
		t.success_resp_example,
		t.fail_resp_type,
		t.fail_resp_example,
		t.remark,
		t.add_time,
		t.update_time,
		need_resources,
		wiki_id,
		response_remark,
		request_remark,
		creat_user,
		update_user
	</sql>

	<insert id="add" parameterType="org.s.api.admin.core.model.XxlApiDocument" useGeneratedKeys="true" keyProperty="id" >
		INSERT INTO api_document (
			project_id,
			group_id,
			name,
			status,
			star_level,
			request_url,
			request_method,
			request_headers,
			request_example,
			query_params,
			response_params,
			response_datatype_id,
			success_resp_type,
			success_resp_example,
			fail_resp_type,
			fail_resp_example,
			remark,
			add_time,
			update_time,
			need_resources,
			wiki_id,
			response_remark,
			request_remark,
			creat_user,
			update_user
		) VALUES (
			#{projectId},
			#{groupId},
			#{name},
			#{status},
			#{starLevel},
			#{requestUrl},
			#{requestMethod},
			#{requestHeaders},
			#{requestExample},
			#{queryParams},
			#{responseParams},
			#{responseDatatypeId},
			#{successRespType},
			#{successRespExample},
			#{failRespType},
			#{failRespExample},
			#{remark},
			NOW(),
			NOW(),
			#{needResources},
			#{wikiId},
			#{respRemark},
			#{reqRemark},
			#{creatUser},
			#{updateUser}
		);
	</insert>

	<update id="update" parameterType="org.s.api.admin.core.model.XxlApiDocument" >
		UPDATE api_document
		SET
			group_id = #{groupId},
			name = #{name},
			status = #{status},
			star_level = #{starLevel},
			request_url = #{requestUrl},
			request_method = #{requestMethod},
			request_headers = #{requestHeaders},
			request_example = #{requestExample},
			query_params = #{queryParams},
			response_params = #{responseParams},
			response_datatype_id = #{responseDatatypeId},
			success_resp_type = #{successRespType},
			success_resp_example = #{successRespExample},
			 fail_resp_type = #{failRespType},
			 fail_resp_example = #{failRespExample},
			 remark = #{remark},
			 update_time = NOW(),
			 need_resources = #{needResources},
			 wiki_id = #{wikiId},
			 response_remark = #{respRemark},
			 request_remark=#{reqRemark},
			 update_user=#{updateUser}
		 WHERE id = #{id}

	</update>

	<delete id="delete" parameterType="java.lang.Integer" >
		DELETE FROM api_document
		WHERE id = #{id}
	</delete>

	<select id="load" parameterType="java.lang.Integer" resultMap="XxlApiDocument">
		SELECT <include refid="Base_Column_List" />
		FROM api_document AS t
		WHERE t.id = #{id}
	</select>


	<select id="loadAll" parameterType="java.util.Map" resultMap="XxlApiDocument">
		SELECT <include refid="Base_Column_List" />
		FROM api_document AS t
		WHERE t.project_id = #{projectId}
		<if test="groupId gte 0" >
			AND t.group_id = #{groupId}
		</if>
		ORDER BY t.star_level DESC, t.add_time DESC
	</select>

	<select id="loadByGroupId" parameterType="java.lang.Integer" resultMap="XxlApiDocument">
		SELECT <include refid="Base_Column_List" />
		FROM api_document AS t
		WHERE t.group_id = #{groupId}
	</select>

	<select id="findByResponseDataTypeId" parameterType="java.lang.Integer" resultMap="XxlApiDocument">
		SELECT <include refid="Base_Column_List" />
		FROM api_document AS t
		WHERE t.response_datatype_id = #{responseDatatypeId}
	</select>

</mapper>